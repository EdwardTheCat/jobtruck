<?php

namespace App\Controller;

use App\Entity\Testimony;
use App\Form\TestimonyType;
use App\Repository\TestimonyRepository;
use Symfony\Component\HttpFoundation\Request;
use Doctrine\Common\Persistence\ObjectManager;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;

class TestimonyController extends AbstractController
{
     /**
     * @Route("admin/testimony/{id}", name="testimonyDetails" , requirements={"id"="\d+"})
     */
    public function details(TestimonyRepository $repo, $id)
    {   
        $testimony=$repo->findOneById($id);
        return $this->render('testimony/testimonyDetails.html.twig', [
            'testimony' => $testimony
        ]);
    }

     /**
     * 
     * @Route("admin/testimony/list", name="testimonyList")
     */
    public function list(testimonyRepository $repo){

        $testimonies=$repo->findAll();

        return $this->render('testimony/testimonyList.html.twig', ["testimonies" => $testimonies]);

    }

     /**
     * @Route("admin/testimony/add", name="testimonyAdd")
     * @Route("admin/testimony/edit/{id}", name="testimonyEdit" , requirements={"id"="\d+"})
     */
    public function add(Testimony $testimony=null, Request $request, ObjectManager $manager)
    {
        // creates a task and gives it some dummy data for this example
        if(is_null($testimony)) {
            $testimony = new Testimony();
        }
            //get the route to update the user on edit, form empty value for avatar 
            $route=$request->get('_route');    
            $oldfilename="";
            if($route=="testimonyEdit"){
                $oldfilename=$testimony->getPhoto();
            }

            $form = $this->createForm(TestimonyType::class, $testimony);

            //We get the user connected note used      
            //$connectedUser=$this->getUser();
           
            $form->handleRequest($request);

            // //we get the route
            // $currentRoute = $request->attributes->get('_route');
            // dump($currentRoute);
            // if($currentRoute=="contactEdit"){
            //     $form->remove('logo');
            // }
          
            
            if ($form->isSubmitted() && $form->isValid()) {
                
                // $file stores the uploaded PDF file
                /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
                
                $file = $form->get('photo')->getData();

                if(is_null($file) or $file=="empty_testimony"){
                    if($route=="testimonyEdit") { $testimony->setPhoto($oldfilename);}
                    else{$testimony->setPhoto('avatar_base.png');}
                }
                else{
                    $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

                    // moves the file to the directory where brochures are stored
                    $file->move(
                        $this->getParameter('logo_directory'),
                        $fileName
                    );
                    // updates the 'user' property to store the PDF file name
                    // instead of its contents
                    $testimony->setPhoto($fileName);
                }
                // else{
                //     if(!is_null($logoSaved)){
                //         $contact->setLogo($logoSaved);
                //     }
                //     //Use a default logo
                //     else{}
                    
                // }
        
                //we encode the password
                //if password from the form != null we encode the new pasword
                
                //save user
                $manager->persist($testimony);
                $manager->flush();
                
                
                return $this->redirectToRoute('testimonyList');
        
            }
            
         
        
        return $this->render('testimony/testimonyAdd.html.twig', [
            'form' => $form->createView(),
            'action' => is_null($testimony->getId()),
            'testimony' => $testimony
            ]
        );
    }

    /**
     * @Route("admin/testimony/delete/{id}", name="testimonyDelete" , requirements={"id"="\d+"})
     */
    public function delete(Testimony $testimony=null, ObjectManager $manager)
    {
        //vérification à faire sur le user avec id
        if(!is_null($testimony)){
            $manager->remove($testimony);
            $manager->flush();
        }

        return $this->redirectToRoute('testimonyList');
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}
